name: docker

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build images
        run: |
          docker build -t app:latest ./docker/
          docker save -o app-image.tar app:latest

      - name: Upload Docker image
        uses: actions/upload-artifact@v4
        with:
          name: app-image
          path: app-image.tar

  test:
    runs-on: ubuntu-latest
    needs: [ build ]
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{ secrets.TEST_DB_NAME }}
          POSTGRES_USER: ${{ secrets.TEST_DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
          POSTGRES_PORT: ${{ secrets.TEST_DB_PORT }}
        ports:
          - 5432:5432
    steps:
      - name: Download Docker image
        uses: actions/download-artifact@v4
        with:
          name: app-image
          
      - name: Load Docker image
        run: docker load -i app-image.tar
      
      - name: Run tests
        run: |
          docker run --network host \
            -e DB_HOST=${{ secrets.TEST_DB_HOST }} \
            -e DB_PORT=${{ secrets.TEST_DB_PORT }} \
            -e DB_NAME=${{ secrets.TEST_DB_NAME }} \
            -e DB_USER=${{ secrets.TEST_DB_USER }} \
            -e DB_PASSWORD=${{ secrets.TEST_DB_PASSWORD }} \
            app:latest \
            pytest /app/tests/

  deploy:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Deploy to server
        run: echo "Deploying..."

  verify:
    runs-on: ubuntu-latest
    steps:
      - name: Verify deployment
        run: echo "Verification..."
